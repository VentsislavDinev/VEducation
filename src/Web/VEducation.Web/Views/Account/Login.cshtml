@using Abp.Web.Mvc.Extensions
@using Microsoft.Owin.Security
@model VEducation.Data.ViewModels.Account.LoginViewModel
@section Styles
{
    @Html.IncludeStyle("~/Views/Account/Login.css")
}
<div class="container">
    <div id="LoginArea" class="row">
        <div class="col-lg-12">
            <div class="well bs-component">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <fieldset>
                        <legend>@L("LogIn")</legend>

                        <div class="form-group">
                            <div class="col-lg-12">
                                @Html.TextBoxFor(m => m.UsernameOrEmailAddress, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-12">
                                @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        <span class="ripple"></span>
                                        <span class="check"></span> @L("RememberMe")
                                    </label>
                                </div>
                            </div>
                        </div>
                        <input id="ReturnUrlHash" type="hidden" name="returnUrlHash" />
                        <div class="form-group">
                            <div class="col-lg-12">
                                <button id="LoginButton" type="submit" class="btn btn-primary"><i class="fa fa-sign-in"></i> @L("LogIn")</button>
                                <a class="btn btn-success" href="@Url.Action("Register")"><i class="fa fa-sign-in"></i> @L("Register")</a>
                            </div>
                        </div>
                    </fieldset>
                }
                @*<form id="LoginForm" class="form-horizontal" action="@(Url.Action("Login", "Account"))?returnUrl=@(Model.ReturnUrl)" method="POST"></form>
        @{
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();
        }
        @if (loginProviders.Count > 0)
        {
            <p>@L("OrLoginWith"):</p>


            using (Html.BeginForm("ExternalLogin", "Account", method: FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                <input type="hidden" name="provider" value="" />

                foreach (var provider in loginProviders)
                {
                    <a class="btn btn-default btn-sm social-login-link" title="@provider.AuthenticationType"
                       data-provider="@provider.AuthenticationType"
                       href="javascript:;">
                        <i class="fa fa-@(provider.AuthenticationType.ToLower())"></i> @provider.AuthenticationType
                    </a>
                }
            }
        }*@
            </div>
        </div>
    </div>
</div>